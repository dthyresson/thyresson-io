---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import '../styles/global.css';
import '@fontsource/zilla-slab';
import { Image } from '@unpic/astro';
type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
  </head>

  <body>
    <main class="container max-w-3xl mx-auto px-4 md:px-6">
      <Header />
      <article>
        {
          heroImage && (
            <div class="">
              <Image
                width={1024}
                height={576}
                src={heroImage}
                alt=""
                class="rounded-lg shadow-lg"
              />
            </div>
          )
        }
        <div class="py-4">
          <h2 class="text-2xl font-bold">{title}</h2>
          <div class="flex flex-wrap gap-2 justify-between items-center pt-4">
            <div class="flex-1 flex flex-wrap gap-2">
              {
                tags.map((tag) => (
                  <a
                    href={`/blog/tag/${encodeURIComponent(tag)}`}
                    class="p-1 bg-white hover:bg-gray-50 border border-gray-200 rounded-lg text-sm text-gray-500 hover:text-gray-900 hover:underline"
                  >
                    {tag}
                  </a>
                ))
              }
            </div>

            <p class="text-sm whitespace-nowrap">
              üóìÔ∏è <FormattedDate date={pubDate} />
            </p>
          </div>
          <div class="mt-8">
            <p class="text-lg text-gray-700 mb-4 border-b border-gray-200 pb-4">
              {description}
            </p>
          </div>

          <div class="prose text-black text-lg my-4">
            <slot />
          </div>
        </div>

        <div class="border-t border-gray-200 mt-4 pt-4 flex justify-between">
          <span>üóìÔ∏è <FormattedDate date={pubDate} /></span>
          {
            updatedDate && (
              <div class="last-updated-on">
                ‚è±Ô∏è Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
