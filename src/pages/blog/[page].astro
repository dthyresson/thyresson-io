---
import { getCollection } from 'astro:content';
import type { PaginateFunction } from 'astro';
import { SITE_TITLE, SITE_IMAGE } from '../../consts';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Tag from '../../components/Tag.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from '@unpic/astro';
import PostCard from '../../components/PostCard.astro';

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  return paginate(posts, { pageSize: 10 });
}
const { page } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={`${SITE_TITLE} | Blog`}
      description="Things I'm thinking about..."
      image={SITE_IMAGE}
    />
  </head>
  <body>
    <main class="md:max-w-2xl lg:max-w-3xl mx-auto px-4 md:px-6">
      <Header />
      <section>
        <div class="space-y-4">
          <p>
            Thoughts on technology, AI, and investing, along with things I've
            built and some rediscovered content from my past: including photos,
            recipes and papers from my English Comprehensive exams and Joyce
            Seminars at Middlebury College ('96-'97) found on old Zip disks -
            and other ephermera from my career in tech.
          </p>
          <p>
            Consider the dates a timeline rather when published or first
            written.
          </p>
          <p class="text-sm text-gray-500 mb-8">
            Many hero images are AI generated using <a
              href="https://fal.ai"
              class="underline">fal.ai</a
            > using the <a
              href="https://fal.ai/models/fal-ai/flux/dev"
              class="underline">fal-ai/flux/dev</a
            > and <a
              href="https://fal.ai/models/fal-ai/flux/schnell"
              class="underline">fal-ai/flux/schnell</a
            >&nbsp;models.
          </p>
        </div>
        <h3 class="flex justify-between mb-4 text-gray-600 text-lg text-right">
          <span><a href="/blog/tags" class="hover:none">üè∑Ô∏è by Tag</a></span>
          <span
            >Page <a href={`/blog/${page.currentPage}`} class="hover:underline"
              >{page.currentPage}</a
            > of <a href={`/blog/${page.lastPage}`} class="hover:underline"
              >{page.lastPage}</a
            ></span
          >
        </h3>
        <ul class="space-y-4">
          {
            page.data.map((post) => (
              <li class="py-4 rounded-lg border border-gray-200 p-4 shadow-md">
                <a href={`/blog/${post.id}`}>
                  <PostCard post={post} />
                </a>
              </li>
            ))
          }
        </ul>
        <div class="flex gap-6 justify-center mt-8 text-base">
          {
            page.url.first && (
              <a
                href={page.url.first}
                class="text-gray-600 hover:text-gray-900 hover:underline flex items-center gap-1"
              >
                <span class="text-xl">‚èÆÔ∏è</span>
              </a>
            )
          }
          {
            page.url.prev && (
              <a
                href={page.url.prev}
                class="text-gray-600 hover:text-gray-900 hover:underline flex items-center gap-1"
              >
                <span class="text-xl">‚óÄÔ∏è</span>
              </a>
            )
          }
          {
            page.url.next && (
              <a
                href={page.url.next}
                class="text-gray-600 hover:text-gray-900 hover:underline flex items-center gap-1"
              >
                <span class="text-xl">‚ñ∂Ô∏è</span>
              </a>
            )
          }
          {
            page.url.last && (
              <a
                href={page.url.last}
                class="text-gray-600 hover:text-gray-900 hover:underline flex items-center gap-1"
              >
                <span class="text-xl">‚è≠Ô∏è</span>
              </a>
            )
          }
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>
